# This file contains build instructions for Travis CI.
# The following configuration matrix includes:
# -- Anaconda Python
# -- R 3.5
#
# Note that continuous integration is normally used for packages.
# If this configuration file feels redundant, then feel free to ax it.
# It can still be useful for ensuring that analyses reproduce smoothly. 
#
# This file can be extended to include many languages and multiple environments;
# see here for more info: https://docs.travis-ci.com/user/tutorial/
 
matrix:
	include:
	# language and versions (note if using conda we don't use Travis python but add here for consistency
	- language: python
		python:
			- "3.6"
		# install dependencies
		install:
			# if using pip then either install dependencies directly or add on seperate lines in a pip_requirements.txt file
			#- pip install pytest pytest-cov
			#- pip install coveralls
			#- pip install -r pip_requirements.txt

			# if using conda then we setup an environment from an conda_env.yml file
			# first install miniconda
			- sudo apt-get update
			- wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
			- bash miniconda.sh -b -p $HOME/miniconda
			- export PATH="$HOME/miniconda/bin:$PATH"
			- hash -r
			- conda config --set always_yes yes --set changeps1 no
			- conda update -q conda
			- conda info -a     # Useful for debugging any issues with conda
			# now create the environment and install any extra packages
			- conda env create -n test-environment -f conda_env.yml
			- source activate test-environment
			# pip install and non conda packages
			- pip install coveralls

			# setup packages
			- python setup.py install

		# command to run tests
		script:
			- py.test --cov . --cov-report term-missing
		branches:
		  only:
		   - master
		after_success:
		- coveralls
	# by default, TravisCI will download all packages in DESCRIPTION
	- language: r 
		r: 
			- oldrel
			- release
			- devel 

#notifications:
#  email:
#    recipients:
#      - xxx@statoil.com
#    on_success: always
#    on_failure: always

